
    <MudDialog Style="width:280px" @bind-Visible="IsVisible">

        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.AddLocation" Class="mr-3 mb-n1" />
                Add City
            </MudText>
       </TitleContent>
        <DialogContent>
            <EditForm Model="city" Enhance OnValidSubmit="Save">
            <MudTextField @bind-Value="@city.Id" Label="CITY ID" Disabled ReadOnly="true" />
            <MudTextField @bind-Value="@city.Name" Label="City Name" />
          
            <MudSelect Class="mt-3" T="int" Required="true" @bind-Value="@city.CountryId" Variant="Variant.Outlined" Label="Select Country" AnchorOrigin="Origin.BottomCenter">
             
                @foreach (var country in Countries)
                {
                    <MudSelectItem T="int" Value="@country.Id">@country.Name</MudSelectItem>
                }

            </MudSelect>

            <div class="d-flex mt-3 justify-content-start align-items-center">
                @* Class="ml-auto" *@
                <MudButton ButtonType="MudBlazor.ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Save</MudButton>
                <MudButton Class="ml-auto" OnClick="CloseDialog">Close</MudButton>

            </div>
            </EditForm>
        </DialogContent>
      
    </MudDialog>




@code {


    [Parameter] public City city { get; set; } = new();
    [Parameter] public List<Country> Countries { get; set; } = new();
    [Parameter] public EventCallback<City> HandleSaveOperationEvent { get; set; }
    private bool IsVisible { get; set; } = false;


    public string Title { get; set; } = "Add";

    private async void Save()
    {
        if (string.IsNullOrEmpty(city.Name) || city.CountryId <= 0)
        {
            await dialogService.ShowMessageBox("Alert!","You need to provid City name.");

        }
        else
        {
            await HandleSaveOperationEvent.InvokeAsync(city);
        }
    }


    public void CloseDialog()
    {
        IsVisible = false;
        StateHasChanged();
    } 

    private async Task ForceLoadCountries() =>
    Countries = await _countryService.GetAll(Constants.CountrytBaseUrl);

    public async Task OpenDialog()
    {
        IsVisible = true;
        await ForceLoadCountries();
        StateHasChanged();
    }

    public void ChangeTitle(string title)
    {
        Title = title;
    }

  
}
